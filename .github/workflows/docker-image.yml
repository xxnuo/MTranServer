name: Build & Push Multi-Arch Image

on:
  push:
    branches: [main]
    tags: ["v*"]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}   # owner/repo 形式，如 mtrans/mtranserver

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # 推送 ghcr.io 需要写权限

    steps:
      # ---------- 1. 检出代码 ----------
      - name: Checkout
        uses: actions/checkout@v4

      # ---------- 2. 设置 QEMU + BuildX ----------
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ---------- 3. 登录 ghcr.io ----------
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}   # 自动生成的临时 token

      # ---------- 4. 生成镜像元数据（tag） ----------
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix=sha-

      # ---------- 5. 编译并推送双平台镜像 ----------
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile          # 你的 Dockerfile 路径
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
